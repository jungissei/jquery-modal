{"version":3,"sources":["lib/jquery-modal/jquery-modal.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","$","Modal","element","options","defaults","Map","init","_closeModal","modal","openTriggers","concat","id","find","on","event","handleOpenTriggerClick","currentTarget","bind","handleTriggerFocus","closeTriggers","handleCloseTriggerClick","is","waitModalAnimation","getAnimations","console","log","allSettled","animation","finished","manageEventListeners","add","backdropClickListener","keyDownListener","handleKeyDown","window","set","listeners","eventListenersMap","get","trigger","preventDefault","currentOpenTrigger","openModal","closeModal","open","close","removeAttr","handleBackdropClick","target","key","backfaceFixed","$modal","closeOtherModals","showModal","requestAnimationFrame","attr","_context","isTransitioning","_callee","currentModal","data","each","_callee2","_context2","_x","isVerticalWritingMode","css","includes","getScrollBarSize","scrollBarXSize","innerHeight","height","scrollBarYSize","innerWidth","width","getScrollPosition","fixed","document","scrollingElement","scrollTop","parseInt","applyStyles","scrollPosition","styles","blockSize","insetInlineStart","position","insetBlockStart","inlineSize","restorePosition","_defineProperty","behavior","scrollTo","scrollBarWidth","fn","action","jQuery"],"mappings":"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","file":"jquery-modal.min.js","sourcesContent":["(function ($) {\n  /**\n   * モーダル機能を初期化するコンストラクタ\n   * @param {HTMLElement} element モーダルを適用するDOM要素\n   * @param {Object} options モーダルの設定オプション\n   */\n  function Modal(element, options) {\n\n    this.element = element; // モーダルの基となる要素を設定\n    this.settings = $.extend({}, Modal.defaults, options); // デフォルト設定とユーザー設定をマージ\n    this.eventListenersMap = new Map(); // イベントリスナーを管理するためのMapオブジェクト\n    this.currentOpenTrigger = null; // 現在モーダルを開いているトリガーを保持\n    this.isTransitioning = false; // トランジション中かどうかの状態\n\n    // 初期化メソッドを呼び出し\n    this.init();\n  }\n\n\n  Modal.defaults = {\n    // デフォルトオプションをここに追加\n  };\n\n  Modal.prototype = {\n\n    /**\n     * 初期化\n     */\n    init: function () {\n\n      const modal = this.element;\n\n      // モーダルを開くトリガーと閉じるトリガーを取得\n      const openTriggers = $(`[data-modal-open=\"${modal.id}\"]`);\n      const closeTriggers = $(modal).find(\"[data-modal-close]\");\n\n      // 開くトリガーにイベントリスナーを追加\n      openTriggers.on(\"click\", function(event) {\n        this.handleOpenTriggerClick(event, modal, event.currentTarget);\n      }.bind(this));\n      openTriggers.on(\"mousedown keydown\", this.handleTriggerFocus);\n\n      // 閉じるトリガーにイベントリスナーを追加\n      closeTriggers.on(\"click\", function(event) {\n        this.handleCloseTriggerClick(event, modal);\n      }.bind(this));\n\n      // data-modal-dialog-default-open属性を持つ場合、ページ読み込み時にモーダルを開く\n      if ($(modal).is(\"[data-modal-dialog-default-open]\") && !$(\"[data-modal-dialog-default-open]:visible\").length) {\n        this.openModal(modal);\n      }\n    },\n\n    /**\n     * モーダルのアニメーションが完了するのを待つ\n     * @param {HTMLElement} modal モーダルダイアログ要素\n     * @returns Promiseの配列が解決された後の結果を返す\n     */\n    waitModalAnimation: function (modal) {\n\n      // モーダル内のアニメーションがない場合、すぐに解決されたPromiseを返す\n      // if ($(modal).find(\":animated\").length === 0 && !$(modal).is(\":hidden\")){\n      if (modal.getAnimations().length === 0){\n        console.log(\"no animation\");\n        return Promise.resolve([]);\n      }\n\n      // モーダル内の全てのアニメーションが完了するのを待つ\n      return Promise.allSettled(\n        [...modal.getAnimations()].map(function(animation) {\n          return animation.finished;\n        })\n      );\n    },\n\n    /**\n     * モーダルのイベントリスナーを管理。\n     * @param {HTMLElement} modal イベントリスナーを追加または削除するモーダル要素\n     * @param {boolean} add trueの場合はイベントリスナーを追加し、falseの場合は削除します\n     */\n    manageEventListeners: function (modal, add) {\n\n      // バックドロップクリックリスナーを作成\n      const backdropClickListener = function(event) {\n        this.handleBackdropClick(event, modal);\n      }.bind(this);\n\n      // キーダウンリスナーを作成\n      const keyDownListener = function(event) {\n        this.handleKeyDown(event, modal);\n      }.bind(this);\n\n      if (add) {\n        // イベントリスナーをモーダルとウィンドウに追加\n        $(modal).on(\"click\", backdropClickListener);\n        $(window).on(\"keydown\", keyDownListener);\n        // イベントリスナーマップにリスナーを追加\n        this.eventListenersMap.set(modal, {\n          backdropClickListener,\n          keyDownListener,\n        });\n      } else {\n        // イベントリスナーをモーダルとウィンドウから削除\n        const listeners = this.eventListenersMap.get(modal);\n        if (listeners) {\n          $(modal).off(\"click\", listeners.backdropClickListener);\n          $(window).off(\"keydown\", listeners.keyDownListener);\n          // イベントリスナーマップからリスナーを削除\n          this.eventListenersMap.delete(modal);\n        }\n      }\n    },\n\n    /**\n     * トリガーをクリックした際にモーダルを開く処理を行います。\n     * @param {Event} event イベントオブジェクト\n     * @param {HTMLElement} modal 開くモーダルの要素\n     * @param {HTMLElement} trigger トリガーとなる要素\n     */\n    handleOpenTriggerClick: function (event, modal, trigger) {\n      // デフォルトのイベントをキャンセル\n      event.preventDefault();\n      // 現在開いているトリガーを設定\n      this.currentOpenTrigger = trigger;\n      // モーダルを開く\n      this.openModal(modal);\n    },\n\n    /**\n     * トリガーをクリックした際にモーダルを閉じる処理を行います。\n     * @param {Event} event イベントオブジェクト\n     * @param {HTMLElement} modal 閉じるモーダルの要素\n     */\n    handleCloseTriggerClick: function (event, modal) {\n      // デフォルトのイベントをキャンセル\n      event.preventDefault();\n      // モーダルを閉じる\n      this.closeModal(modal);\n    },\n\n    /**\n     * モーダルを開く\n     */\n    open: function () {\n      this.openModal(this.element);\n    },\n\n    /**\n     * モーダルを閉じる\n     */\n    close: function () {\n      this.closeModal(this.element);\n    },\n\n    /**\n     * トリガーがフォーカスされた際のイベントを処理します。\n     * @param {Event} event - マウスダウンまたはキーダウンイベントオブジェクト\n     */\n    handleTriggerFocus: function (event) {\n      // マウスダウンイベントが発生した場合、HTML要素に属性を設定\n      if (event.type === \"mousedown\") {\n        $(\"html\").attr(\"data-mousedown\", \"true\");\n      }\n      // キーダウンイベントが発生した場合、HTML要素から属性を削除\n      if (event.type === \"keydown\") {\n        $(\"html\").removeAttr(\"data-mousedown\");\n      }\n    },\n\n    /**\n     * モーダルのバックドロップをクリックした際の処理。\n     * @param {Event} event - イベントオブジェクト\n     * @param {HTMLElement} modal - 対象のモーダル要素\n     */\n    handleBackdropClick: function (event, modal) {\n      // クリックされた要素がモーダル自体である場合、モーダルを閉じる\n      if (event.target === modal) {\n        this.closeModal(modal);\n      }\n    },\n\n    /**\n     * キーダウンイベントが発生した際の処理を行う。\n     * Escapeキーが押された場合、モーダルを閉じる。\n     * @param {Event} event - イベントオブジェクト\n     * @param {HTMLElement} modal - 対象のモーダル要素\n     */\n    handleKeyDown: function (event, modal) {\n      // HTML要素からマウスダウンのデータ属性を削除\n      $(\"html\").removeAttr(\"data-mousedown\");\n      // Escapeキーが押された場合の処理\n      if (event.key === \"Escape\") {\n        // デフォルトのイベントをキャンセル\n        event.preventDefault();\n        // モーダルを閉じる\n        this.closeModal(modal);\n      }\n    },\n\n    /**\n     * モーダルを開く処理を行います。\n     * @param {HTMLElement} modal - 対象のモーダル要素\n     */\n    openModal: function (modal) {\n\n      // トランジション中であれば処理を中断\n      if (this.isTransitioning) return;\n\n      // トランジション状態を開始に設定\n      this.isTransitioning = true;\n\n      // 他のモーダルを閉じる\n      this.closeOtherModals(modal);\n\n      const $modal = $(modal);\n\n      // モーダルが開く前のイベントをトリガー\n      $modal.trigger(\"modal.before_open\");\n\n      // モーダルを表示状態にする\n      modal.showModal();\n      // 背景を固定する処理を呼び出し\n      this.backfaceFixed(true);\n      // イベントリスナーを管理する処理を呼び出し\n      this.manageEventListeners(modal, true);\n\n      // アニメーションフレームをリクエストして非同期処理を実行\n      requestAnimationFrame(async function() {\n        // モーダルがアクティブであることを示す属性を設定\n        $modal.attr(\"data-modal-active\", \"true\");\n        // モーダルのアニメーション完了を待機\n        await this.waitModalAnimation(modal);\n        // トランジション状態を終了に設定\n        this.isTransitioning = false;\n\n        // モーダルが開いた後のイベントをトリガー\n        $modal.trigger(\"modal.after_open\");\n      }.bind(this));\n    },\n\n    /**\n     * 他のモーダルを閉じる\n     * @param {HTMLElement} currentModal - 現在開こうとしているモーダル要素\n     */\n    closeOtherModals: function (currentModal) {\n      $(\"[data-modal-dialog]\").each(function () {\n        let modal = $(this).data(\"modal\");\n        if (modal && this !== currentModal && $(this).attr(\"data-modal-active\") === \"true\") {\n          modal.close();\n        }\n      });\n    },\n\n    /**\n     * モーダルを閉じる処理を行う。\n     * トランジション中は処理を中断し、モーダルのアクティブ状態を解除後、イベントリスナーを削除し、アニメーション完了後にモーダルを閉じる。\n     * @param {HTMLElement} modal - 対象のモーダル要素\n     */\n    closeModal: async function (modal) {\n\n      // トランジション中であれば処理を中断\n      if (this.isTransitioning) return;\n\n      // トランジション状態を開始に設定\n      this.isTransitioning = true;\n\n      let $modal = $(modal);\n      // モーダルが閉じる前のイベントをトリガー\n      $modal.trigger(\"modal.before_close\");\n\n      // モーダルのアクティブ状態を解除\n      $modal.attr(\"data-modal-active\", \"false\");\n      // 背景固定を解除\n      this.backfaceFixed(false);\n      // イベントリスナーを削除\n      this.manageEventListeners(modal, false);\n\n      // モーダルのアニメーション完了を待機\n      await this.waitModalAnimation(modal);\n      // モーダルを閉じる\n      modal.close();\n\n      // 開いていたトリガーがあればフォーカスを戻す\n      if (this.currentOpenTrigger) {\n        $(this.currentOpenTrigger).focus();\n        this.currentOpenTrigger = null;\n      }\n\n      // トランジション状態を終了に設定\n      this.isTransitioning = false;\n\n      // モーダルが閉じた後のイベントをトリガー\n      $modal.trigger(\"modal.after_close\");\n    },\n\n    /**\n     * HTML要素の書き込みモードが垂直かどうかを判断する関数\n     * @returns {boolean} 垂直書きの場合はtrue、それ以外はfalse\n     */\n    isVerticalWritingMode: function () {\n      const writingMode = $(\"html\").css(\"writing-mode\");\n      return writingMode.includes(\"vertical\");\n    },\n\n    /**\n     * スクロールバーのサイズを取得する関数\n     * 垂直書きの場合は水平スクロールバーのサイズを、それ以外の場合は垂直スクロールバーのサイズを返す。\n     * @returns {number} スクロールバーのサイズ\n     */\n    getScrollBarSize: function () {\n      // 水平スクロールバーのサイズを計算\n      const scrollBarXSize = window.innerHeight - $(\"body\").height();\n      // 垂直スクロールバーのサイズを計算\n      const scrollBarYSize = window.innerWidth - $(\"body\").width();\n      // 垂直書きの場合は水平スクロールバーのサイズを、それ以外の場合は垂直スクロールバーのサイズを返す\n      return this.isVerticalWritingMode() ? scrollBarXSize : scrollBarYSize;\n    },\n\n    /**\n     * スクロール位置を取得する関数\n     * @param {boolean} fixed 固定されているかどうかの真偽値\n     * @returns {number} スクロール位置の数値\n     */\n    getScrollPosition: function (fixed) {\n      // 固定されている場合\n      if (fixed) {\n        // 垂直書きの場合は水平スクロール位置を、それ以外の場合は垂直スクロール位置を返す\n        return this.isVerticalWritingMode()\n          ? $(document.scrollingElement).scrollLeft()\n          : $(document.scrollingElement).scrollTop();\n      }\n      // 固定されていない場合はbodyのinset-block-startの値を整数で返す\n      return parseInt($(\"body\").css(\"inset-block-start\") || \"0\", 10);\n    },\n\n    /**\n     * スクロール位置に基づいてスタイルを適用または削除する関数\n     * @param {number} scrollPosition - スクロール位置の数値\n     * @param {boolean} apply - スタイルを適用するかどうかの真偽値\n     */\n    applyStyles: function (scrollPosition, apply) {\n      // スタイル設定オブジェクト\n      const styles = {\n        blockSize: \"100dvb\", // ブロックサイズ\n        insetInlineStart: \"0\", // インライン開始位置\n        position: \"fixed\", // 位置固定\n        insetBlockStart: this.isVerticalWritingMode() // ブロック開始位置\n          ? `${scrollPosition}px`\n          : `${scrollPosition * -1}px`,\n        inlineSize: \"100dvi\", // インラインサイズ\n      };\n      // スタイルを適用または削除\n      Object.keys(styles).forEach(function(key) {\n        $(\"body\").css(key, apply ? styles[key] : \"\");\n      });\n    },\n\n    /**\n     * スクロール位置を元に戻す関数\n     * @param {number} scrollPosition - 元に戻すスクロール位置\n     */\n    restorePosition: function (scrollPosition) {\n      // スクロールオプションを設定\n      const options = {\n        behavior: \"instant\", // スクロール動作を即時に設定\n        [this.isVerticalWritingMode() ? \"left\" : \"top\"]: this.isVerticalWritingMode()\n          ? scrollPosition // 垂直書きの場合は左スクロール位置を設定\n          : scrollPosition * -1, // 水平書きの場合は上スクロール位置を設定（逆方向）\n      };\n      // スクロール位置を設定したオプションで更新\n      window.scrollTo(options);\n    },\n\n    /**\n     * 固定された背面のスクロールバーの幅を調整し、スタイルを適用または削除します。\n     * @param {boolean} fixed - 固定するかどうかの真偽値\n     */\n    backfaceFixed: function (fixed) {\n      // スクロールバーの幅を取得\n      const scrollBarWidth = this.getScrollBarSize();\n      // 現在のスクロール位置を取得\n      const scrollPosition = this.getScrollPosition(fixed);\n      // bodyのpadding-inline-endを設定（固定時はスクロールバーの幅、非固定時は0）\n      $(\"body\").css(\"padding-inline-end\", fixed ? `${scrollBarWidth}px` : \"\");\n      // スクロール位置に基づいてスタイルを適用または削除\n      this.applyStyles(scrollPosition, fixed);\n      // 固定が解除された場合、スクロール位置を元に戻す\n      if (!fixed) {\n        this.restorePosition(scrollPosition);\n      }\n    },\n  };\n\n  /**\n   * jQueryプラグインとしてモーダル機能を初期化します。\n   * @param {Object|string} options - モーダルの設定オプションまたはアクション文字列。\n   *                                  openプロパティがtrueの場合、モーダルを自動的に開きます。\n   *                                  'close'を指定した場合、モーダルを閉じます。\n   */\n  $.fn.modal = function (options) {\n\n    // オプションが文字列の場合はアクションとして処理\n    if (typeof options === 'string') {\n      const action = options;\n\n      // 各要素に対して処理を行います。\n      return this.each(function () {\n        // 現在の要素からモーダルデータを取得します。\n        let modal = $(this).data(\"modal\");\n\n        // モーダルデータが存在する場合にのみアクションを実行\n        if (modal) {\n          if (action === 'close') {\n            modal.close(); // モーダルを閉じる\n          }\n        }\n      });\n    }\n\n    // デフォルトオプションを設定\n    options = $.extend({\n      open: false, // デフォルトではモーダルを自動的に開かない\n    }, options);\n\n    // 各要素に対して処理を行います。\n    return this.each(function () {\n      // 現在の要素からモーダルデータを取得します。\n      let modal = $(this).data(\"modal\");\n\n      // モーダルデータが存在しない場合、新たに作成してデータを設定します。\n      if (!modal) {\n        modal = new Modal(this); // 新しいモーダルインスタンスを作成\n        $(this).data(\"modal\", modal); // 作成したモーダルインスタンスを要素に紐付け\n      }\n\n      // openオプションがtrueの場合、モーダルを自動的に開きます。\n      if (options.open) {\n        modal.open(); // モーダルを開く\n      }\n    });\n  };\n\n  /**\n   * モーダルダイアログを持つ要素に対してモーダル機能を適用します。\n   */\n  $(\"[data-modal-dialog]\").each(function () {\n    // 各要素にモーダル機能を適用\n    $(this).modal();\n  });\n})(jQuery);\n"]}